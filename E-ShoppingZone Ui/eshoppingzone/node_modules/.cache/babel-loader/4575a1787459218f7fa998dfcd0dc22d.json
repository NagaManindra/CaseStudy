{"ast":null,"code":"var _jsxFileName = \"D:\\\\E-ShoppingZone Ui\\\\eshoppingzone\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Component, useContext, useState, Fragment } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport \"./Login.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"username is required!\")\n});\n\nconst Login = () => {\n  _s();\n\n  /**To Show Add Toastify Text */\n  const notify = () => {\n    toast.success(\"Admin LoggedIn Successfully!!!\", {\n      position: \"top-center\",\n      autoClose: 2000\n    });\n  };\n  /**To Show Error Toastify Text */\n\n\n  const error = () => {\n    toast.error(\"Invalid Credentials!!!\", {\n      position: \"top-center\",\n      autoClose: 2000\n    });\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n\n  const fromUrl = _get(location, \"state.from.pathname\");\n\n  const signInSuccess = userData => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/adminTrainList\");\n    }\n  };\n\n  const signInFailure = userData => {\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const login = userData => {\n    fetch(\"http://localhost:8079/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        username: userData.username,\n        password: userData.password\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(\"your userId and password is not correct\");\n      } else {\n        const userData = {\n          token: response,\n          name: username\n        };\n\n        if (response.response === ' Invalid Credentials..!') {\n          signInFailure(userData);\n          error();\n        } else {\n          signInSuccess(userData);\n          notify();\n        }\n\n        console.log(response);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const userData = { ...values\n        };\n        resetForm(); // notify();\n\n        login(userData);\n      } catch (err) {\n        // error();\n        console.error(err);\n      }\n    },\n    children: () => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"booking\",\n          children: \"ADMIN LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\",\n            type: \"text\",\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            onClick: () => {},\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zUWyIfjiZW9ceho5ydxYVroXb9w=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Component","useContext","useState","Fragment","Formik","Form","Field","useHistory","useLocation","Yup","_get","toast","configure","LoginSchema","object","shape","password","string","required","username","Login","notify","success","position","autoClose","error","setUsername","setPassword","history","location","fromUrl","signInSuccess","userData","push","signInFailure","login","fetch","method","headers","accept","body","JSON","stringify","then","response","json","alert","token","name","console","log","catch","err","values","resetForm"],"sources":["D:/E-ShoppingZone Ui/eshoppingzone/src/components/login.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component, useContext, useState, Fragment } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport _get from \"lodash.get\";\r\nimport \"./Login.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure()\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Password is required!\"),\r\n  username: Yup.string().required(\"username is required!\"),\r\n});\r\n\r\nconst Login = () => {\r\n   \r\n   /**To Show Add Toastify Text */\r\n   const notify = () => {\r\n    toast.success(\"Admin LoggedIn Successfully!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n  \r\n  /**To Show Error Toastify Text */\r\n  const error = () =>\r\n  {\r\n    toast.error(\"Invalid Credentials!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n    });\r\n  };\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const fromUrl = _get(location, \"state.from.pathname\");\r\n  const signInSuccess = (userData) => {\r\n    if (fromUrl) {\r\n      history.push(fromUrl);\r\n    } else {\r\n      history.push(\"/adminTrainList\");\r\n    }\r\n  };\r\n\r\n  const signInFailure = (userData) => {\r\n    if (fromUrl) {\r\n      history.push(fromUrl);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  const login = (userData) => {\r\n    fetch(\"http://localhost:8079/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        accept: \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: userData.username,\r\n        password: userData.password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.error) {\r\n          alert(\"your userId and password is not correct\");\r\n        } else {\r\n          const userData = {\r\n            token: response,\r\n            name: username,\r\n          };\r\n          if(response.response === ' Invalid Credentials..!')\r\n          {\r\n            signInFailure(userData);\r\n            error();\r\n          }\r\n        else{\r\n           signInSuccess(userData);\r\n           notify();\r\n        }\r\n          console.log(response);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        password: \"\",\r\n      }}\r\n      validationSchema={LoginSchema}\r\n      onSubmit={async (values, { resetForm }) => {\r\n        try {\r\n          const userData = { ...values };\r\n          resetForm();\r\n          // notify();\r\n          login(userData);\r\n        } catch (err) {\r\n          // error();\r\n          console.error(err);\r\n        }\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n           <div className=\"booking-container\">\r\n           <h1 className=\"booking\">ADMIN LOGIN</h1>\r\n           <hr></hr>\r\n            <div className=\"inner\">\r\n              <label><b>User Name</b></label>\r\n              <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" />\r\n              <label><b>Password</b></label>\r\n              <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n              <button\r\n                className=\"btn btn-success\"\r\n                type=\"submit\"\r\n                onClick={() => {}}\r\n              >\r\n                Sign In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default Login;"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,aAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;;AAEAA,KAAK,CAACC,SAAN;AAEA,MAAMC,WAAW,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;EACrCC,QAAQ,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAD2B;EAErCC,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAF2B,CAAnB,CAApB;;AAKA,MAAME,KAAK,GAAG,MAAM;EAAA;;EAEjB;EACA,MAAMC,MAAM,GAAG,MAAM;IACpBV,KAAK,CAACW,OAAN,CAAc,gCAAd,EAAgD;MAC9CC,QAAQ,EAAE,YADoC;MAE9CC,SAAS,EAAE;IAFmC,CAAhD;EAID,CALA;EAOD;;;EACA,MAAMC,KAAK,GAAG,MACd;IACEd,KAAK,CAACc,KAAN,CAAY,wBAAZ,EAAsC;MACpCF,QAAQ,EAAE,YAD0B;MAEpCC,SAAS,EAAE;IAFyB,CAAtC;EAID,CAND;;EAQA,MAAM,CAACL,QAAD,EAAWO,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,QAAD,EAAWW,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM0B,OAAO,GAAGrB,UAAU,EAA1B;EACA,MAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;;EACA,MAAMsB,OAAO,GAAGpB,IAAI,CAACmB,QAAD,EAAW,qBAAX,CAApB;;EACA,MAAME,aAAa,GAAIC,QAAD,IAAc;IAClC,IAAIF,OAAJ,EAAa;MACXF,OAAO,CAACK,IAAR,CAAaH,OAAb;IACD,CAFD,MAEO;MACLF,OAAO,CAACK,IAAR,CAAa,iBAAb;IACD;EACF,CAND;;EAQA,MAAMC,aAAa,GAAIF,QAAD,IAAc;IAClC,IAAIF,OAAJ,EAAa;MACXF,OAAO,CAACK,IAAR,CAAaH,OAAb;IACD,CAFD,MAEO;MACLF,OAAO,CAACK,IAAR,CAAa,QAAb;IACD;EACF,CAND;;EAQA,MAAME,KAAK,GAAIH,QAAD,IAAc;IAC1BI,KAAK,CAAC,6BAAD,EAAgC;MACnCC,MAAM,EAAE,MAD2B;MAEnCC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEPC,MAAM,EAAE,kBAFD;QAGP,+BAA+B;MAHxB,CAF0B;MAOnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBvB,QAAQ,EAAEa,QAAQ,CAACb,QADA;QAEnBH,QAAQ,EAAEgB,QAAQ,CAAChB;MAFA,CAAf;IAP6B,CAAhC,CAAL,CAYG2B,IAZH,CAYSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZtB,EAaGF,IAbH,CAaSC,QAAD,IAAc;MAClB,IAAIA,QAAQ,CAACnB,KAAb,EAAoB;QAClBqB,KAAK,CAAC,yCAAD,CAAL;MACD,CAFD,MAEO;QACL,MAAMd,QAAQ,GAAG;UACfe,KAAK,EAAEH,QADQ;UAEfI,IAAI,EAAE7B;QAFS,CAAjB;;QAIA,IAAGyB,QAAQ,CAACA,QAAT,KAAsB,yBAAzB,EACA;UACEV,aAAa,CAACF,QAAD,CAAb;UACAP,KAAK;QACN,CAJD,MAKE;UACDM,aAAa,CAACC,QAAD,CAAb;UACAX,MAAM;QACR;;QACC4B,OAAO,CAACC,GAAR,CAAYN,QAAZ;MACD;IACF,CAhCH,EAiCGO,KAjCH,CAiCUC,GAAD,IAAS;MACdH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CAnCH;EAoCD,CArCD;;EAsCA,oBACE,QAAC,MAAD;IACE,aAAa,EAAE;MACbjC,QAAQ,EAAE,EADG;MAEbH,QAAQ,EAAE;IAFG,CADjB;IAKE,gBAAgB,EAAEH,WALpB;IAME,QAAQ,EAAE,OAAOwC,MAAP,WAAiC;MAAA,IAAlB;QAAEC;MAAF,CAAkB;;MACzC,IAAI;QACF,MAAMtB,QAAQ,GAAG,EAAE,GAAGqB;QAAL,CAAjB;QACAC,SAAS,GAFP,CAGF;;QACAnB,KAAK,CAACH,QAAD,CAAL;MACD,CALD,CAKE,OAAOoB,GAAP,EAAY;QACZ;QACAH,OAAO,CAACxB,KAAR,CAAc2B,GAAd;MACD;IACF,CAhBH;IAAA,UAkBG,mBACC,QAAC,IAAD;MAAA,uBACG;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACA;UAAI,SAAS,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA;UAAA;UAAA;QAAA,QAFA,eAGC;UAAK,SAAS,EAAC,OAAf;UAAA,wBACE;YAAA,uBAAO;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAP;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,IAAI,EAAC,MAA5B;YAAmC,WAAW,EAAC;UAA/C;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,uBAAO;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAP;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,IAAI,EAAC,UAA5B;YAAuC,WAAW,EAAC;UAAnD;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YACE,SAAS,EAAC,iBADZ;YAEE,IAAI,EAAC,QAFP;YAGE,OAAO,EAAE,MAAM,CAAE,CAHnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAHD;MAAA;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA;EAnBJ;IAAA;IAAA;IAAA;EAAA,QADF;AA0CD,CAxHD;;GAAMhC,K;UAqBYb,U,EACCC,W;;;KAtBbY,K;AAyHN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}